<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure </line>
</preamble>

<pid>3712</pid>
<ppid>2630</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--leak-check=full</arg>
    <arg>--track-origins=yes</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/vincent/Jerry/the-council-of-jerrys/project/ValgrindOut.xml</arg>
  </vargv>
  <argv>
    <exe>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</exe>
    <arg></arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.111 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 1</what>
  <stack>
    <frame>
      <ip>0x41CE31</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>TextBox::TextBox(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)</fn>
      <dir>/home/vincent/Jerry/the-council-of-jerrys/src</dir>
      <file>TextBox.cpp</file>
      <line>18</line>
    </frame>
    <frame>
      <ip>0x4385E9</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>TextBoxTest::setUp()</fn>
      <dir>/home/vincent/Jerry/the-council-of-jerrys/test</dir>
      <file>TextBoxTest.cpp</file>
      <line>12</line>
    </frame>
    <frame>
      <ip>0x439BC4</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>CppUnit::TestCaller&lt;TextBoxTest&gt;::setUp()</fn>
      <dir>/usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x4E5B291</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x4E51B92</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E584C1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E60B2F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E5AFF3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B5C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B4DD</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B5C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B4DD</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x5f4aa98 is 0 bytes after a block of size 24 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2E0EF</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x519896C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x51989CE</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4385CD</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>TextBoxTest::setUp()</fn>
      <dir>/home/vincent/Jerry/the-council-of-jerrys/test</dir>
      <file>TextBoxTest.cpp</file>
      <line>12</line>
    </frame>
    <frame>
      <ip>0x439BC4</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>CppUnit::TestCaller&lt;TextBoxTest&gt;::setUp()</fn>
      <dir>/usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x4E5B291</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x4E51B92</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E584C1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E60B2F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E5AFF3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B5C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B4DD</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 1</what>
  <stack>
    <frame>
      <ip>0x41CE31</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>TextBox::TextBox(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)</fn>
      <dir>/home/vincent/Jerry/the-council-of-jerrys/src</dir>
      <file>TextBox.cpp</file>
      <line>18</line>
    </frame>
    <frame>
      <ip>0x438630</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>TextBoxTest::setUp()</fn>
      <dir>/home/vincent/Jerry/the-council-of-jerrys/test</dir>
      <file>TextBoxTest.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x439BC4</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>CppUnit::TestCaller&lt;TextBoxTest&gt;::setUp()</fn>
      <dir>/usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x4E5B291</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x4E51B92</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E584C1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E60B2F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E5AFF3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B5C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B4DD</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B5C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B4DD</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x5f4ac28 is 0 bytes after a block of size 24 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2E0EF</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x519896C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x51989CE</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x438614</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>TextBoxTest::setUp()</fn>
      <dir>/home/vincent/Jerry/the-council-of-jerrys/test</dir>
      <file>TextBoxTest.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x439BC4</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>CppUnit::TestCaller&lt;TextBoxTest&gt;::setUp()</fn>
      <dir>/usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x4E5B291</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x4E51B92</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E584C1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E60B2F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E5AFF3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B5C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B4DD</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x48</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x41CE3B</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>TextBox::TextBox(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)</fn>
      <dir>/home/vincent/Jerry/the-council-of-jerrys/src</dir>
      <file>TextBox.cpp</file>
      <line>18</line>
    </frame>
    <frame>
      <ip>0x438681</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>TextBoxTest::setUp()</fn>
      <dir>/home/vincent/Jerry/the-council-of-jerrys/test</dir>
      <file>TextBoxTest.cpp</file>
      <line>14</line>
    </frame>
    <frame>
      <ip>0x439BC4</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>CppUnit::TestCaller&lt;TextBoxTest&gt;::setUp()</fn>
      <dir>/usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x4E5B291</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x4E51B92</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E584C1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E60B2F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E5AFF3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B5C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B4DD</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B5C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B4DD</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x438584</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>TextBoxTest::setUp()</fn>
      <dir>/home/vincent/Jerry/the-council-of-jerrys/test</dir>
      <file>TextBoxTest.cpp</file>
      <line>10</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x108</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x41CE3B</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>TextBox::TextBox(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)</fn>
      <dir>/home/vincent/Jerry/the-council-of-jerrys/src</dir>
      <file>TextBox.cpp</file>
      <line>18</line>
    </frame>
    <frame>
      <ip>0x439D16</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>WindowTest::setUp()</fn>
      <dir>/home/vincent/Jerry/the-council-of-jerrys/test</dir>
      <file>WindowTest.cpp</file>
      <line>14</line>
    </frame>
    <frame>
      <ip>0x43BB2A</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>CppUnit::TestCaller&lt;WindowTest&gt;::setUp()</fn>
      <dir>/usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x4E5B291</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x4E51B92</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E584C1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E60B2F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E5AFF3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B5C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B4DD</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B5C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B4DD</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x439C44</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>WindowTest::setUp()</fn>
      <dir>/home/vincent/Jerry/the-council-of-jerrys/test</dir>
      <file>WindowTest.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x134</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x41CE3B</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>TextBox::TextBox(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)</fn>
      <dir>/home/vincent/Jerry/the-council-of-jerrys/src</dir>
      <file>TextBox.cpp</file>
      <line>18</line>
    </frame>
    <frame>
      <ip>0x439D7F</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>WindowTest::setUp()</fn>
      <dir>/home/vincent/Jerry/the-council-of-jerrys/test</dir>
      <file>WindowTest.cpp</file>
      <line>15</line>
    </frame>
    <frame>
      <ip>0x43BB2A</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>CppUnit::TestCaller&lt;WindowTest&gt;::setUp()</fn>
      <dir>/usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x4E5B291</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x4E51B92</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E584C1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E60B2F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E5AFF3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B5C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B4DD</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B5C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x4E5B4DD</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libcppunit-1.13.so.0.0.2</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x439C44</ip>
      <obj>/home/vincent/Jerry/the-council-of-jerrys/project/bin/Debug/JerrysAdventure</obj>
      <fn>WindowTest::setUp()</fn>
      <dir>/home/vincent/Jerry/the-council-of-jerrys/test</dir>
      <file>WindowTest.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:02.177 </time>
</status>

<errorcounts>
  <pair>
    <count>132</count>
    <unique>0x134</unique>
  </pair>
  <pair>
    <count>132</count>
    <unique>0x108</unique>
  </pair>
  <pair>
    <count>48</count>
    <unique>0x48</unique>
  </pair>
  <pair>
    <count>108</count>
    <unique>0x24</unique>
  </pair>
  <pair>
    <count>108</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

